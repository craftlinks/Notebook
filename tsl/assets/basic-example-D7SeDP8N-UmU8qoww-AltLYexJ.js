import{a as f,w as s,F as c,s as a}from"./index-BV4KyFgT.js";async function A(){const e=new f;await e.init();const t=10,o=s(t,"float"),n=s(t,"float"),r=c(()=>{o.element(a).assign(a.add(1).toFloat())})(),u=c(()=>{const p=o.element(a);n.element(a).assign(p.mul(2))})();await e.computeAsync(r.compute(t)),await e.computeAsync(u.compute(t));const l=await e.getArrayBufferAsync(o.value),i=await e.getArrayBufferAsync(n.value),m={input:Array.from(new Float32Array(l)),output:Array.from(new Float32Array(i))};return console.log("Basic compute shader example executed successfully!"),m}console.log("TSL Check: Successfully imported and created TSL function");export{A as initComputeShader};
